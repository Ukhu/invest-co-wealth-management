openapi: 3.0.0
info:
  title: InvestCo Wealth Management
  description: Minimum Viable Product for InvestCo Wealth and Asset Management

externalDocs:
  description: Checkout the GitHub repo
  url: https://github.com/Ukhu/invest-co-wealth-management

servers:
- url: /api/v1
  description: Host

tags:
  - name: Auth
    description: Authentication routes
  - name: Stock
    description: Stocks routes
  - name: Portfolio
    description: Portfolio routes

security:
- ApiKeyAuth: []

paths:
  /auth/signup:
    post:
      tags:
        - Auth
      summary: Sign up
      description: Creates a new user in the database
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        201:
          description: successfully created user
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: successfully created user!
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      email:
                        type: string
                      firstName:
                        type: string
                      lastName:
                        type: string
                      availableBalance:
                        type: string
                      token:
                        type: string
        400:
          description: bad request
          content:
            application/json:
              schema:
                type: object
                properties: 
                  error:
                    type: object
                    properties:
                      body:
                        type: object
                        properties:
                          email:
                            type: string
                            example: must be a valid email
                          displayName:
                            type: string
                            example: firstName must be with valid alphabets
        409:
          description: conflict
          content:
            application/json:
              schema:
                type: object
                properties: 
                  error:
                    type: string
                    example: a user with the given email already exists
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: object
                properties: 
                  error:
                    type: string
                    example: error occured!
  /stocks/available:
    get:
      tags:
        - Stock
      summary: Gets all available stock options
      description: Gets the available stock options from the database
      responses:
        200:
          description: request successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: successfully returned available stocks
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        tradingCode:
                          type: string
                        companyName:
                          type: string
                        unitPrice:
                          type: string
                        createdAt:
                          type: string
                        updatedAt:
                          type: string
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties: 
                  error:
                    type: string
                    example: invalid token
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: object
                properties: 
                  error:
                    type: string
                    example: error occured!
  /portfolio:
    get:
      tags:
        - Portfolio
      summary: Gets the users current stocks
      description: Gets the users current stocks in their portfolio
      responses:
        200:
          description: request successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: successfully returned current stocks in your portfolio
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        userId:
                          type: string
                        tradingCode:
                          type: string
                        numberOfUnits:
                          type: string
                        createdAt:
                          type: string
                        updatedAt:
                          type: string
        404:
          description: request successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: there are currently no stocks in your portfolio
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties: 
                  error:
                    type: string
                    example: invalid token
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: object
                properties: 
                  error:
                    type: string
                    example: error occured!
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: Authorization
      in: header
